{"version":3,"sources":["Components/Navbar.js","Components/TextBox.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","Mode","style","fontSize","fontWeight","title","type","id","role","onClick","bgclrfn1","color","background","bgclrfn2","bgclrfn3","toggleMode","htmlFor","TextBox","useState","text","setText","value","onChange","event","target","rows","newText","toUpperCase","showalert","toLowerCase","trim","split","join","charAt","length","defaultProps","Alert","alert","word","lower","slice","capitalize","msg","App","setMode","setalert","message","setTimeout","document","body","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3cc3d7e0.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n//import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props){       \r\n\r\n      return (\r\n        <>\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.Mode} bg-${props.Mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" style={{fontSize:25 ,fontWeight:\"bold\"}}>{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n       {/* <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href= \"#\">Home</a>\r\n        </li>\r\n         <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href= \"/about\">About</a>\r\n        </li> */}\r\n      </ul>\r\n      \r\n      {/* Search Box */}\r\n      {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-success\" type=\"submit\">Search</button>\r\n      </form> */}\r\n\r\n      <div className=\"btn-group mx-4\" role=\"group\">\r\n        <button className=\"btn\" onClick={props.bgclrfn1} style={{fontSize:12, fontWeight: 'bold', color:\"white\", background:\"#175873\"}}></button>\r\n        <button className=\"btn\" onClick={props.bgclrfn2} style={{fontSize:12, fontWeight: 'bold', color:\"white\",background:\"#2B7C85\"}}></button>\r\n        <button className=\"btn\" onClick={props.bgclrfn3} style={{fontSize:12, fontWeight: 'bold', color:\"white\",background:\"#0C1446\"}}></button>\r\n        \r\n      </div> \r\n \r\n      <div className={`form-check form-switch text-${props.Mode==='light'? 'dark':'light'}`}>\r\n        <input className=\"form-check-input\"  onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark-Mode</label>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</nav>\r\n</>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = { title: PropTypes.string.isRequired }\r\n\r\n// Specifies the default values for props:\r\nNavbar.defaultProps = {\r\n    title: 'TEXT COUNTER'\r\n  };","import React,{useState} from 'react'\r\n\r\nexport default function TextBox(props) {\r\n    const[text,setText]= useState(\"\"); \r\n\r\n        const handleUpClick = ()=>{\r\n            //console.log(\"UpperCase clicked -btn\");\r\n            let newText= text.toUpperCase();\r\n            setText(newText)\r\n            props.showalert(\"Converted to UpperCase\",\"success\");\r\n        }\r\n        const handleDownClick = ()=>{\r\n            //console.log(\"LowerCase clicked -btn\");\r\n            let newText= text.toLowerCase();\r\n            setText(newText);\r\n            props.showalert(\"Converted to LowerCase\",\"success\");\r\n        }\r\n        const handleOnChange = (event)=>{\r\n            //console.log(\"On Change\");\r\n            setText(event.target.value);   \r\n        }\r\n        const handleExtraSpace = ()=>{\r\n            //console.log(\"Extra Space\");\r\n            const removeExtraSpace = (text) => text.trim().split(/ +/).join(' ');\r\n            setText(removeExtraSpace);  \r\n            props.showalert(\"Removed Extra Space\",\"success\");\r\n        }\r\n              \r\n    return (\r\n        <>\r\n        <div>\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"Textarea\" className=\"form-label\">{props.title}</label>\r\n                <textarea className=\"form-control\" id=\"Textarea\" value={text} onChange={handleOnChange} rows=\"6\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleUpClick} >UpperCase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleDownClick} >LowerCase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpace} >Remove Extra Space</button>\r\n        </div>\r\n\r\n            <div className=\"container my-4\">\r\n                <h5>Results</h5>\r\n                <p>{text.charAt(0)===\"\"?'0':text.trim().split(/ +/).length } Words and {text.length} Letters</p>\r\n                <p>{((text.trim().split(/ +/).length)-1) *0.008*60} Seconds read</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n    const capitalize=(word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1)\r\n    } \r\n\r\n    return (\r\n     props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}! </strong>{props.alert.msg} \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert","import './App.css';\nimport Navbar from './Components/Navbar'\nimport TextBox from './Components/TextBox'\nimport React, { useState } from 'react'\nimport Alert from './Components/Alert'\n// import About from './Components/About';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n\n  const bgclrfn1 = ()=>{\n   document.body.style.color='white'\n   document.body.style.backgroundColor='#175873';\n }\n const bgclrfn2 = ()=>{\n   document.body.style.color='white'\n   document.body.style.backgroundColor='#2B7C85';\n }\n const bgclrfn3 = ()=>{\n   document.body.style.color='white'\n   document.body.style.backgroundColor='#0C1446';\n }\n\n  const [Mode, setMode] = useState('light');  //Whether Darkmode is enabled/disabled.\n  const toggleMode= ()=>{\n    if(Mode === 'light'){\n      setMode('dark')\n      document.body.style.color='white'\n      document.body.style.backgroundColor='black';\n      showalert(\"Dark Mode Enabled\",\"success\");\n    }else{  setMode('light')\n      document.body.style.color='black'\n      document.body.style.backgroundColor='white'; \n      showalert(\"Dark Mode Disabled\",\"success\");\n    }\n  }\n\n  const [alert, setalert] = useState(null)\n  const showalert= (message,type)=>{\n    setalert({\n      msg: message,\n      type: type\n      })\n      setTimeout(() => {\n        setalert(null);\n      }, 1500);\n  }\n\n  return (\n  <>\n   {/* <Router> */}\n   <Navbar title=\"Text Editor\" Mode={Mode} toggleMode={toggleMode} bgclrfn1={bgclrfn1} bgclrfn2={bgclrfn2} bgclrfn3={bgclrfn3} />\n   <Alert alert={alert} />\n\n   <div className=\"container my-3\" >\n    {/* <Switch>\n          <Route exact path=\"/about\">\n            <About/>\n          </Route>\n          <Route exact path=\"/\"> */}\n            <TextBox showalert={showalert} title=\"Enter your text\" />\n          {/* </Route>\n    </Switch>  */}\n   </div>\n   {/* </Router> */}\n\n  </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}